# Makefile.in generated by automake 1.16.1 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/theforgottenserver
pkgincludedir = $(includedir)/theforgottenserver
pkglibdir = $(libdir)/theforgottenserver
pkglibexecdir = $(libexecdir)/theforgottenserver
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
noinst_PROGRAMS = theforgottenserver$(EXEEXT)
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
PROGRAMS = $(noinst_PROGRAMS)
am__theforgottenserver_SOURCES_DIST = account.h actions.cpp actions.h \
	admin.cpp admin.h allocator.cpp allocator.h baseevents.cpp \
	baseevents.h beds.cpp beds.h chat.cpp chat.h combat.cpp \
	combat.h condition.cpp condition.h config.h configmanager.cpp \
	configmanager.h connection.cpp connection.h const.h \
	container.cpp container.h creature.cpp creature.h \
	creatureevent.cpp creatureevent.h cylinder.cpp cylinder.h \
	database.cpp database.h databasemanager.cpp databasemanager.h \
	databasemysql.cpp databasemysql.h databasesqlite.cpp \
	databasesqlite.h databasepgsql.cpp databasepgsql.h \
	databaseodbc.cpp databaseodbc.h depot.cpp depot.h \
	exception.cpp exception.h fileloader.cpp fileloader.h game.cpp \
	game.h gameservers.cpp gameservers.h globalevent.cpp \
	globalevent.h group.cpp group.h gui.cpp gui.h house.cpp \
	house.h housetile.cpp housetile.h inputbox.cpp inputbox.h \
	ioban.cpp ioban.h ioguild.cpp ioguild.h iologindata.cpp \
	iologindata.h iomap.cpp iomapserialize.cpp iomapserialize.h \
	item.cpp item.h itemattributes.cpp itemattributes.h items.cpp \
	items.h luascript.cpp luascript.h mailbox.cpp mailbox.h \
	map.cpp map.h md5.cpp md5.h monster.cpp monster.h monsters.cpp \
	monsters.h movement.cpp movement.h networkmessage.cpp \
	networkmessage.h npc.cpp npc.h otpch.h otserv.cpp otsystem.h \
	outfit.cpp outfit.h outputmessage.cpp outputmessage.h \
	party.cpp party.h playerbox.cpp playerbox.h player.cpp \
	player.h position.cpp position.h protocol.cpp protocol.h \
	protocolgame.cpp protocolgame.h protocollogin.cpp \
	protocollogin.h protocolold.cpp protocolold.h quests.cpp \
	quests.h raids.cpp raids.h resources.h rsa.cpp rsa.h \
	scheduler.cpp scheduler.h scriptmanager.cpp scriptmanager.h \
	server.cpp server.h sha1.cpp sha1.h spawn.cpp spawn.h \
	spells.cpp spells.h status.cpp status.h talkaction.cpp \
	talkaction.h tasks.cpp tasks.h teleport.cpp teleport.h \
	templates.h textlogger.cpp textlogger.h thing.cpp thing.h \
	tile.cpp tile.h tools.cpp tools.h town.h trashholder.cpp \
	trashholder.h waitlist.cpp waitlist.h waypoints.h weapons.cpp \
	weapons.h vocation.cpp vocation.h
#am__objects_1 = admin.$(OBJEXT)
am__objects_2 = databasemysql.$(OBJEXT)
#am__objects_3 = databasesqlite.$(OBJEXT)
#am__objects_4 = databasepgsql.$(OBJEXT)
#am__objects_5 = databaseodbc.$(OBJEXT)
#am__objects_6 = gameservers.$(OBJEXT)
am_theforgottenserver_OBJECTS = actions.$(OBJEXT) $(am__objects_1) \
	allocator.$(OBJEXT) baseevents.$(OBJEXT) beds.$(OBJEXT) \
	chat.$(OBJEXT) combat.$(OBJEXT) condition.$(OBJEXT) \
	configmanager.$(OBJEXT) connection.$(OBJEXT) \
	container.$(OBJEXT) creature.$(OBJEXT) creatureevent.$(OBJEXT) \
	cylinder.$(OBJEXT) database.$(OBJEXT) \
	databasemanager.$(OBJEXT) $(am__objects_2) $(am__objects_3) \
	$(am__objects_4) $(am__objects_5) depot.$(OBJEXT) \
	exception.$(OBJEXT) fileloader.$(OBJEXT) game.$(OBJEXT) \
	$(am__objects_6) globalevent.$(OBJEXT) group.$(OBJEXT) \
	gui.$(OBJEXT) house.$(OBJEXT) housetile.$(OBJEXT) \
	inputbox.$(OBJEXT) ioban.$(OBJEXT) ioguild.$(OBJEXT) \
	iologindata.$(OBJEXT) iomap.$(OBJEXT) iomapserialize.$(OBJEXT) \
	item.$(OBJEXT) itemattributes.$(OBJEXT) items.$(OBJEXT) \
	luascript.$(OBJEXT) mailbox.$(OBJEXT) map.$(OBJEXT) \
	md5.$(OBJEXT) monster.$(OBJEXT) monsters.$(OBJEXT) \
	movement.$(OBJEXT) networkmessage.$(OBJEXT) npc.$(OBJEXT) \
	otserv.$(OBJEXT) outfit.$(OBJEXT) outputmessage.$(OBJEXT) \
	party.$(OBJEXT) playerbox.$(OBJEXT) player.$(OBJEXT) \
	position.$(OBJEXT) protocol.$(OBJEXT) protocolgame.$(OBJEXT) \
	protocollogin.$(OBJEXT) protocolold.$(OBJEXT) quests.$(OBJEXT) \
	raids.$(OBJEXT) rsa.$(OBJEXT) scheduler.$(OBJEXT) \
	scriptmanager.$(OBJEXT) server.$(OBJEXT) sha1.$(OBJEXT) \
	spawn.$(OBJEXT) spells.$(OBJEXT) status.$(OBJEXT) \
	talkaction.$(OBJEXT) tasks.$(OBJEXT) teleport.$(OBJEXT) \
	textlogger.$(OBJEXT) thing.$(OBJEXT) tile.$(OBJEXT) \
	tools.$(OBJEXT) trashholder.$(OBJEXT) waitlist.$(OBJEXT) \
	weapons.$(OBJEXT) vocation.$(OBJEXT)
theforgottenserver_OBJECTS = $(am_theforgottenserver_OBJECTS)
am__DEPENDENCIES_1 =
theforgottenserver_DEPENDENCIES = $(am__DEPENDENCIES_1)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/actions.Po ./$(DEPDIR)/admin.Po \
	./$(DEPDIR)/allocator.Po ./$(DEPDIR)/baseevents.Po \
	./$(DEPDIR)/beds.Po ./$(DEPDIR)/chat.Po ./$(DEPDIR)/combat.Po \
	./$(DEPDIR)/condition.Po ./$(DEPDIR)/configmanager.Po \
	./$(DEPDIR)/connection.Po ./$(DEPDIR)/container.Po \
	./$(DEPDIR)/creature.Po ./$(DEPDIR)/creatureevent.Po \
	./$(DEPDIR)/cylinder.Po ./$(DEPDIR)/database.Po \
	./$(DEPDIR)/databasemanager.Po ./$(DEPDIR)/databasemysql.Po \
	./$(DEPDIR)/databaseodbc.Po ./$(DEPDIR)/databasepgsql.Po \
	./$(DEPDIR)/databasesqlite.Po ./$(DEPDIR)/depot.Po \
	./$(DEPDIR)/exception.Po ./$(DEPDIR)/fileloader.Po \
	./$(DEPDIR)/game.Po ./$(DEPDIR)/gameservers.Po \
	./$(DEPDIR)/globalevent.Po ./$(DEPDIR)/group.Po \
	./$(DEPDIR)/gui.Po ./$(DEPDIR)/house.Po \
	./$(DEPDIR)/housetile.Po ./$(DEPDIR)/inputbox.Po \
	./$(DEPDIR)/ioban.Po ./$(DEPDIR)/ioguild.Po \
	./$(DEPDIR)/iologindata.Po ./$(DEPDIR)/iomap.Po \
	./$(DEPDIR)/iomapserialize.Po ./$(DEPDIR)/item.Po \
	./$(DEPDIR)/itemattributes.Po ./$(DEPDIR)/items.Po \
	./$(DEPDIR)/luascript.Po ./$(DEPDIR)/mailbox.Po \
	./$(DEPDIR)/map.Po ./$(DEPDIR)/md5.Po ./$(DEPDIR)/monster.Po \
	./$(DEPDIR)/monsters.Po ./$(DEPDIR)/movement.Po \
	./$(DEPDIR)/networkmessage.Po ./$(DEPDIR)/npc.Po \
	./$(DEPDIR)/otserv.Po ./$(DEPDIR)/outfit.Po \
	./$(DEPDIR)/outputmessage.Po ./$(DEPDIR)/party.Po \
	./$(DEPDIR)/player.Po ./$(DEPDIR)/playerbox.Po \
	./$(DEPDIR)/position.Po ./$(DEPDIR)/protocol.Po \
	./$(DEPDIR)/protocolgame.Po ./$(DEPDIR)/protocollogin.Po \
	./$(DEPDIR)/protocolold.Po ./$(DEPDIR)/quests.Po \
	./$(DEPDIR)/raids.Po ./$(DEPDIR)/rsa.Po \
	./$(DEPDIR)/scheduler.Po ./$(DEPDIR)/scriptmanager.Po \
	./$(DEPDIR)/server.Po ./$(DEPDIR)/sha1.Po ./$(DEPDIR)/spawn.Po \
	./$(DEPDIR)/spells.Po ./$(DEPDIR)/status.Po \
	./$(DEPDIR)/talkaction.Po ./$(DEPDIR)/tasks.Po \
	./$(DEPDIR)/teleport.Po ./$(DEPDIR)/textlogger.Po \
	./$(DEPDIR)/thing.Po ./$(DEPDIR)/tile.Po ./$(DEPDIR)/tools.Po \
	./$(DEPDIR)/trashholder.Po ./$(DEPDIR)/vocation.Po \
	./$(DEPDIR)/waitlist.Po ./$(DEPDIR)/weapons.Po
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(theforgottenserver_SOURCES)
DIST_SOURCES = $(am__theforgottenserver_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
AM_RECURSIVE_TARGETS = cscope
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/config.h.in depcomp \
	install-sh missing
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/mlody/ModernOts/source/missing aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} /home/mlody/ModernOts/source/missing autoconf
AUTOHEADER = ${SHELL} /home/mlody/ModernOts/source/missing autoheader
AUTOMAKE = ${SHELL} /home/mlody/ModernOts/source/missing automake-1.16
AWK = gawk
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O1
CYGPATH_W = echo
DEBUG_FLAGS = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lmysqlclient -lboost_filesystem -lboost_date_time -lboost_system -lboost_regex -lboost_thread -lgmp  -lxml2 -lpthread
LTLIBOBJS = 
LUA_CFLAGS = -I/usr/include/lua5.1
LUA_LIBS = -llua5.1
MAKEINFO = ${SHELL} /home/mlody/ModernOts/source/missing makeinfo
MKDIR_P = /usr/bin/mkdir -p
MYSQL_FLAGS = -D__USE_MYSQL__
MYSQL_LIBS = -lmysqlclient
OBJEXT = o
ODBC_FLAGS = 
ODBC_LIBS = 
OPTIONAL_FLAGS =  -D__ENABLE_SERVER_DIAGNOSTIC__
PACKAGE = theforgottenserver
PACKAGE_BUGREPORT = 
PACKAGE_NAME = TheForgottenServer
PACKAGE_STRING = TheForgottenServer 0.3.5
PACKAGE_TARNAME = theforgottenserver
PACKAGE_URL = 
PACKAGE_VERSION = 0.3.5
PATH_SEPARATOR = :
PGSQL_FLAGS = 
PGSQL_LIBS = 
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PROFILER_FLAGS = 
SET_MAKE = 
SHELL = /bin/bash
SQLITE_FLAGS = 
SQLITE_LIBS = 
STRIP = 
VERSION = 0.3.5
XML2_CONFIG = /usr/bin/xml2-config
XML_CPPFLAGS = -I/usr/include/libxml2
XML_LIBS = -lxml2
abs_builddir = /home/mlody/ModernOts/source
abs_srcdir = /home/mlody/ModernOts/source
abs_top_builddir = /home/mlody/ModernOts/source
abs_top_srcdir = /home/mlody/ModernOts/source
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/mlody/ModernOts/source/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = .
AM_CXXFLAGS = $(XML_CPPFLAGS) $(OTSERV_FLAGS) $(LUA_CFLAGS) $(DEBUG_FLAGS)\
$(MYSQL_FLAGS) $(SQLITE_FLAGS) $(ODBC_FLAGS) $(PGSQL_FLAGS)\
$(PROFILER_FLAGS) $(OPTIONAL_FLAGS) -D_THREAD_SAFE -D_REENTRANT -Wall

theforgottenserver_LDADD = $(LUA_LIBS)
MAYBE_MYSQL = databasemysql.cpp databasemysql.h
#MAYBE_SQLITE = databasesqlite.cpp databasesqlite.h
#MAYBE_PGSQL = databasepgsql.cpp databasepgsql.h
#MAYBE_ODBC = databaseodbc.cpp databaseodbc.h
#MAYBE_LOGIN = gameservers.cpp gameservers.h
#MAYBE_REMOTE = admin.cpp admin.h
theforgottenserver_SOURCES = account.h actions.cpp actions.h $(MAYBE_REMOTE) \
	allocator.cpp allocator.h baseevents.cpp baseevents.h beds.cpp \
	beds.h chat.cpp chat.h combat.cpp combat.h condition.cpp condition.h \
	config.h configmanager.cpp configmanager.h connection.cpp \
	connection.h const.h container.cpp container.h creature.cpp \
	creature.h creatureevent.cpp creatureevent.h cylinder.cpp cylinder.h \
	database.cpp database.h databasemanager.cpp databasemanager.h \
	$(MAYBE_MYSQL) $(MAYBE_SQLITE) $(MAYBE_PGSQL) $(MAYBE_ODBC) \
	depot.cpp depot.h exception.cpp exception.h fileloader.cpp \
	fileloader.h game.cpp game.h $(MAYBE_LOGIN) globalevent.cpp \
	globalevent.h group.cpp group.h gui.cpp gui.h house.cpp house.h \
	housetile.cpp housetile.h inputbox.cpp inputbox.h ioban.cpp ioban.h \
	ioguild.cpp ioguild.h iologindata.cpp iologindata.h iomap.cpp \
	iomapserialize.cpp iomapserialize.h item.cpp item.h itemattributes.cpp \
	itemattributes.h items.cpp items.h luascript.cpp luascript.h \
	mailbox.cpp mailbox.h map.cpp map.h md5.cpp md5.h monster.cpp \
	monster.h monsters.cpp monsters.h movement.cpp movement.h \
	networkmessage.cpp networkmessage.h npc.cpp npc.h otpch.h \
	otserv.cpp otsystem.h outfit.cpp outfit.h outputmessage.cpp \
	outputmessage.h party.cpp party.h playerbox.cpp playerbox.h \
	player.cpp player.h position.cpp position.h protocol.cpp protocol.h \
	protocolgame.cpp protocolgame.h protocollogin.cpp protocollogin.h \
	protocolold.cpp protocolold.h quests.cpp quests.h raids.cpp raids.h \
	resources.h rsa.cpp rsa.h scheduler.cpp scheduler.h scriptmanager.cpp \
	scriptmanager.h server.cpp server.h sha1.cpp sha1.h spawn.cpp spawn.h \
	spells.cpp spells.h status.cpp status.h talkaction.cpp talkaction.h \
	tasks.cpp tasks.h teleport.cpp teleport.h templates.h textlogger.cpp \
	textlogger.h thing.cpp thing.h tile.cpp tile.h tools.cpp tools.h \
	town.h trashholder.cpp trashholder.h waitlist.cpp waitlist.h \
	waypoints.h weapons.cpp weapons.h vocation.cpp vocation.h 

all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)

theforgottenserver$(EXEEXT): $(theforgottenserver_OBJECTS) $(theforgottenserver_DEPENDENCIES) $(EXTRA_theforgottenserver_DEPENDENCIES) 
	@rm -f theforgottenserver$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(theforgottenserver_OBJECTS) $(theforgottenserver_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/actions.Po # am--include-marker
include ./$(DEPDIR)/admin.Po # am--include-marker
include ./$(DEPDIR)/allocator.Po # am--include-marker
include ./$(DEPDIR)/baseevents.Po # am--include-marker
include ./$(DEPDIR)/beds.Po # am--include-marker
include ./$(DEPDIR)/chat.Po # am--include-marker
include ./$(DEPDIR)/combat.Po # am--include-marker
include ./$(DEPDIR)/condition.Po # am--include-marker
include ./$(DEPDIR)/configmanager.Po # am--include-marker
include ./$(DEPDIR)/connection.Po # am--include-marker
include ./$(DEPDIR)/container.Po # am--include-marker
include ./$(DEPDIR)/creature.Po # am--include-marker
include ./$(DEPDIR)/creatureevent.Po # am--include-marker
include ./$(DEPDIR)/cylinder.Po # am--include-marker
include ./$(DEPDIR)/database.Po # am--include-marker
include ./$(DEPDIR)/databasemanager.Po # am--include-marker
include ./$(DEPDIR)/databasemysql.Po # am--include-marker
include ./$(DEPDIR)/databaseodbc.Po # am--include-marker
include ./$(DEPDIR)/databasepgsql.Po # am--include-marker
include ./$(DEPDIR)/databasesqlite.Po # am--include-marker
include ./$(DEPDIR)/depot.Po # am--include-marker
include ./$(DEPDIR)/exception.Po # am--include-marker
include ./$(DEPDIR)/fileloader.Po # am--include-marker
include ./$(DEPDIR)/game.Po # am--include-marker
include ./$(DEPDIR)/gameservers.Po # am--include-marker
include ./$(DEPDIR)/globalevent.Po # am--include-marker
include ./$(DEPDIR)/group.Po # am--include-marker
include ./$(DEPDIR)/gui.Po # am--include-marker
include ./$(DEPDIR)/house.Po # am--include-marker
include ./$(DEPDIR)/housetile.Po # am--include-marker
include ./$(DEPDIR)/inputbox.Po # am--include-marker
include ./$(DEPDIR)/ioban.Po # am--include-marker
include ./$(DEPDIR)/ioguild.Po # am--include-marker
include ./$(DEPDIR)/iologindata.Po # am--include-marker
include ./$(DEPDIR)/iomap.Po # am--include-marker
include ./$(DEPDIR)/iomapserialize.Po # am--include-marker
include ./$(DEPDIR)/item.Po # am--include-marker
include ./$(DEPDIR)/itemattributes.Po # am--include-marker
include ./$(DEPDIR)/items.Po # am--include-marker
include ./$(DEPDIR)/luascript.Po # am--include-marker
include ./$(DEPDIR)/mailbox.Po # am--include-marker
include ./$(DEPDIR)/map.Po # am--include-marker
include ./$(DEPDIR)/md5.Po # am--include-marker
include ./$(DEPDIR)/monster.Po # am--include-marker
include ./$(DEPDIR)/monsters.Po # am--include-marker
include ./$(DEPDIR)/movement.Po # am--include-marker
include ./$(DEPDIR)/networkmessage.Po # am--include-marker
include ./$(DEPDIR)/npc.Po # am--include-marker
include ./$(DEPDIR)/otserv.Po # am--include-marker
include ./$(DEPDIR)/outfit.Po # am--include-marker
include ./$(DEPDIR)/outputmessage.Po # am--include-marker
include ./$(DEPDIR)/party.Po # am--include-marker
include ./$(DEPDIR)/player.Po # am--include-marker
include ./$(DEPDIR)/playerbox.Po # am--include-marker
include ./$(DEPDIR)/position.Po # am--include-marker
include ./$(DEPDIR)/protocol.Po # am--include-marker
include ./$(DEPDIR)/protocolgame.Po # am--include-marker
include ./$(DEPDIR)/protocollogin.Po # am--include-marker
include ./$(DEPDIR)/protocolold.Po # am--include-marker
include ./$(DEPDIR)/quests.Po # am--include-marker
include ./$(DEPDIR)/raids.Po # am--include-marker
include ./$(DEPDIR)/rsa.Po # am--include-marker
include ./$(DEPDIR)/scheduler.Po # am--include-marker
include ./$(DEPDIR)/scriptmanager.Po # am--include-marker
include ./$(DEPDIR)/server.Po # am--include-marker
include ./$(DEPDIR)/sha1.Po # am--include-marker
include ./$(DEPDIR)/spawn.Po # am--include-marker
include ./$(DEPDIR)/spells.Po # am--include-marker
include ./$(DEPDIR)/status.Po # am--include-marker
include ./$(DEPDIR)/talkaction.Po # am--include-marker
include ./$(DEPDIR)/tasks.Po # am--include-marker
include ./$(DEPDIR)/teleport.Po # am--include-marker
include ./$(DEPDIR)/textlogger.Po # am--include-marker
include ./$(DEPDIR)/thing.Po # am--include-marker
include ./$(DEPDIR)/tile.Po # am--include-marker
include ./$(DEPDIR)/tools.Po # am--include-marker
include ./$(DEPDIR)/trashholder.Po # am--include-marker
include ./$(DEPDIR)/vocation.Po # am--include-marker
include ./$(DEPDIR)/waitlist.Po # am--include-marker
include ./$(DEPDIR)/weapons.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) config.h
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
		-rm -f ./$(DEPDIR)/actions.Po
	-rm -f ./$(DEPDIR)/admin.Po
	-rm -f ./$(DEPDIR)/allocator.Po
	-rm -f ./$(DEPDIR)/baseevents.Po
	-rm -f ./$(DEPDIR)/beds.Po
	-rm -f ./$(DEPDIR)/chat.Po
	-rm -f ./$(DEPDIR)/combat.Po
	-rm -f ./$(DEPDIR)/condition.Po
	-rm -f ./$(DEPDIR)/configmanager.Po
	-rm -f ./$(DEPDIR)/connection.Po
	-rm -f ./$(DEPDIR)/container.Po
	-rm -f ./$(DEPDIR)/creature.Po
	-rm -f ./$(DEPDIR)/creatureevent.Po
	-rm -f ./$(DEPDIR)/cylinder.Po
	-rm -f ./$(DEPDIR)/database.Po
	-rm -f ./$(DEPDIR)/databasemanager.Po
	-rm -f ./$(DEPDIR)/databasemysql.Po
	-rm -f ./$(DEPDIR)/databaseodbc.Po
	-rm -f ./$(DEPDIR)/databasepgsql.Po
	-rm -f ./$(DEPDIR)/databasesqlite.Po
	-rm -f ./$(DEPDIR)/depot.Po
	-rm -f ./$(DEPDIR)/exception.Po
	-rm -f ./$(DEPDIR)/fileloader.Po
	-rm -f ./$(DEPDIR)/game.Po
	-rm -f ./$(DEPDIR)/gameservers.Po
	-rm -f ./$(DEPDIR)/globalevent.Po
	-rm -f ./$(DEPDIR)/group.Po
	-rm -f ./$(DEPDIR)/gui.Po
	-rm -f ./$(DEPDIR)/house.Po
	-rm -f ./$(DEPDIR)/housetile.Po
	-rm -f ./$(DEPDIR)/inputbox.Po
	-rm -f ./$(DEPDIR)/ioban.Po
	-rm -f ./$(DEPDIR)/ioguild.Po
	-rm -f ./$(DEPDIR)/iologindata.Po
	-rm -f ./$(DEPDIR)/iomap.Po
	-rm -f ./$(DEPDIR)/iomapserialize.Po
	-rm -f ./$(DEPDIR)/item.Po
	-rm -f ./$(DEPDIR)/itemattributes.Po
	-rm -f ./$(DEPDIR)/items.Po
	-rm -f ./$(DEPDIR)/luascript.Po
	-rm -f ./$(DEPDIR)/mailbox.Po
	-rm -f ./$(DEPDIR)/map.Po
	-rm -f ./$(DEPDIR)/md5.Po
	-rm -f ./$(DEPDIR)/monster.Po
	-rm -f ./$(DEPDIR)/monsters.Po
	-rm -f ./$(DEPDIR)/movement.Po
	-rm -f ./$(DEPDIR)/networkmessage.Po
	-rm -f ./$(DEPDIR)/npc.Po
	-rm -f ./$(DEPDIR)/otserv.Po
	-rm -f ./$(DEPDIR)/outfit.Po
	-rm -f ./$(DEPDIR)/outputmessage.Po
	-rm -f ./$(DEPDIR)/party.Po
	-rm -f ./$(DEPDIR)/player.Po
	-rm -f ./$(DEPDIR)/playerbox.Po
	-rm -f ./$(DEPDIR)/position.Po
	-rm -f ./$(DEPDIR)/protocol.Po
	-rm -f ./$(DEPDIR)/protocolgame.Po
	-rm -f ./$(DEPDIR)/protocollogin.Po
	-rm -f ./$(DEPDIR)/protocolold.Po
	-rm -f ./$(DEPDIR)/quests.Po
	-rm -f ./$(DEPDIR)/raids.Po
	-rm -f ./$(DEPDIR)/rsa.Po
	-rm -f ./$(DEPDIR)/scheduler.Po
	-rm -f ./$(DEPDIR)/scriptmanager.Po
	-rm -f ./$(DEPDIR)/server.Po
	-rm -f ./$(DEPDIR)/sha1.Po
	-rm -f ./$(DEPDIR)/spawn.Po
	-rm -f ./$(DEPDIR)/spells.Po
	-rm -f ./$(DEPDIR)/status.Po
	-rm -f ./$(DEPDIR)/talkaction.Po
	-rm -f ./$(DEPDIR)/tasks.Po
	-rm -f ./$(DEPDIR)/teleport.Po
	-rm -f ./$(DEPDIR)/textlogger.Po
	-rm -f ./$(DEPDIR)/thing.Po
	-rm -f ./$(DEPDIR)/tile.Po
	-rm -f ./$(DEPDIR)/tools.Po
	-rm -f ./$(DEPDIR)/trashholder.Po
	-rm -f ./$(DEPDIR)/vocation.Po
	-rm -f ./$(DEPDIR)/waitlist.Po
	-rm -f ./$(DEPDIR)/weapons.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
		-rm -f ./$(DEPDIR)/actions.Po
	-rm -f ./$(DEPDIR)/admin.Po
	-rm -f ./$(DEPDIR)/allocator.Po
	-rm -f ./$(DEPDIR)/baseevents.Po
	-rm -f ./$(DEPDIR)/beds.Po
	-rm -f ./$(DEPDIR)/chat.Po
	-rm -f ./$(DEPDIR)/combat.Po
	-rm -f ./$(DEPDIR)/condition.Po
	-rm -f ./$(DEPDIR)/configmanager.Po
	-rm -f ./$(DEPDIR)/connection.Po
	-rm -f ./$(DEPDIR)/container.Po
	-rm -f ./$(DEPDIR)/creature.Po
	-rm -f ./$(DEPDIR)/creatureevent.Po
	-rm -f ./$(DEPDIR)/cylinder.Po
	-rm -f ./$(DEPDIR)/database.Po
	-rm -f ./$(DEPDIR)/databasemanager.Po
	-rm -f ./$(DEPDIR)/databasemysql.Po
	-rm -f ./$(DEPDIR)/databaseodbc.Po
	-rm -f ./$(DEPDIR)/databasepgsql.Po
	-rm -f ./$(DEPDIR)/databasesqlite.Po
	-rm -f ./$(DEPDIR)/depot.Po
	-rm -f ./$(DEPDIR)/exception.Po
	-rm -f ./$(DEPDIR)/fileloader.Po
	-rm -f ./$(DEPDIR)/game.Po
	-rm -f ./$(DEPDIR)/gameservers.Po
	-rm -f ./$(DEPDIR)/globalevent.Po
	-rm -f ./$(DEPDIR)/group.Po
	-rm -f ./$(DEPDIR)/gui.Po
	-rm -f ./$(DEPDIR)/house.Po
	-rm -f ./$(DEPDIR)/housetile.Po
	-rm -f ./$(DEPDIR)/inputbox.Po
	-rm -f ./$(DEPDIR)/ioban.Po
	-rm -f ./$(DEPDIR)/ioguild.Po
	-rm -f ./$(DEPDIR)/iologindata.Po
	-rm -f ./$(DEPDIR)/iomap.Po
	-rm -f ./$(DEPDIR)/iomapserialize.Po
	-rm -f ./$(DEPDIR)/item.Po
	-rm -f ./$(DEPDIR)/itemattributes.Po
	-rm -f ./$(DEPDIR)/items.Po
	-rm -f ./$(DEPDIR)/luascript.Po
	-rm -f ./$(DEPDIR)/mailbox.Po
	-rm -f ./$(DEPDIR)/map.Po
	-rm -f ./$(DEPDIR)/md5.Po
	-rm -f ./$(DEPDIR)/monster.Po
	-rm -f ./$(DEPDIR)/monsters.Po
	-rm -f ./$(DEPDIR)/movement.Po
	-rm -f ./$(DEPDIR)/networkmessage.Po
	-rm -f ./$(DEPDIR)/npc.Po
	-rm -f ./$(DEPDIR)/otserv.Po
	-rm -f ./$(DEPDIR)/outfit.Po
	-rm -f ./$(DEPDIR)/outputmessage.Po
	-rm -f ./$(DEPDIR)/party.Po
	-rm -f ./$(DEPDIR)/player.Po
	-rm -f ./$(DEPDIR)/playerbox.Po
	-rm -f ./$(DEPDIR)/position.Po
	-rm -f ./$(DEPDIR)/protocol.Po
	-rm -f ./$(DEPDIR)/protocolgame.Po
	-rm -f ./$(DEPDIR)/protocollogin.Po
	-rm -f ./$(DEPDIR)/protocolold.Po
	-rm -f ./$(DEPDIR)/quests.Po
	-rm -f ./$(DEPDIR)/raids.Po
	-rm -f ./$(DEPDIR)/rsa.Po
	-rm -f ./$(DEPDIR)/scheduler.Po
	-rm -f ./$(DEPDIR)/scriptmanager.Po
	-rm -f ./$(DEPDIR)/server.Po
	-rm -f ./$(DEPDIR)/sha1.Po
	-rm -f ./$(DEPDIR)/spawn.Po
	-rm -f ./$(DEPDIR)/spells.Po
	-rm -f ./$(DEPDIR)/status.Po
	-rm -f ./$(DEPDIR)/talkaction.Po
	-rm -f ./$(DEPDIR)/tasks.Po
	-rm -f ./$(DEPDIR)/teleport.Po
	-rm -f ./$(DEPDIR)/textlogger.Po
	-rm -f ./$(DEPDIR)/thing.Po
	-rm -f ./$(DEPDIR)/tile.Po
	-rm -f ./$(DEPDIR)/tools.Po
	-rm -f ./$(DEPDIR)/trashholder.Po
	-rm -f ./$(DEPDIR)/vocation.Po
	-rm -f ./$(DEPDIR)/waitlist.Po
	-rm -f ./$(DEPDIR)/weapons.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: all install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles am--refresh check \
	check-am clean clean-cscope clean-generic clean-noinstPROGRAMS \
	cscope cscopelist-am ctags ctags-am dist dist-all dist-bzip2 \
	dist-gzip dist-lzip dist-shar dist-tarZ dist-xz dist-zip \
	distcheck distclean distclean-compile distclean-generic \
	distclean-hdr distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

